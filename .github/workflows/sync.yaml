name: Sync Upstream Repository

on:
  schedule:
    - cron: '0 9 * * *' # PDT 凌晨 2 点 (UTC 上午 9 点)
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes detected'
        required: false
        default: 'false'
        type: boolean
  push:
    branches: [ main ]

jobs:
  sync-upstream:
    name: Sync with Upstream
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add Upstream Remote
        run: |
          git remote add upstream https://github.com/LibreSpark/LibreTV || true
          git remote set-url upstream https://github.com/LibreSpark/LibreTV

      - name: Fetch Upstream Changes
        run: |
          echo "📡 Fetching changes from upstream repository..."
          git fetch upstream
          git fetch origin

      - name: Check for Updates
        id: check_updates
        run: |
          UPSTREAM_COMMIT=$(git rev-parse upstream/main)
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "🔍 Current commit: $CURRENT_COMMIT"
          echo "🔍 Upstream commit: $UPSTREAM_COMMIT"
          if [ "$UPSTREAM_COMMIT" != "$CURRENT_COMMIT" ]; then
            echo "✅ New changes detected in upstream repository"
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "upstream_commit=$UPSTREAM_COMMIT" >> $GITHUB_OUTPUT
            git log --oneline $CURRENT_COMMIT..$UPSTREAM_COMMIT || true
          else
            echo "ℹ️ No new changes in upstream repository"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Reset to Upstream
        if: steps.check_updates.outputs.has_updates == 'true' || github.event.inputs.force_sync == 'true'
        run: |
          echo "🔄 Syncing changes from upstream..."
          # 重置到上游 main 分支，覆盖本地历史
          git reset --hard upstream/main
          echo "✅ Repository reset to upstream/main"

      - name: Remove Unnecessary Workflow Files (Exclude sync.yml)
        if: steps.check_updates.outputs.has_updates == 'true' || github.event.inputs.force_sync == 'true'
        run: |
          echo "🗑️ Removing unnecessary workflow files (excluding sync.yml)..."
          git rm -r .github/workflows/* --exclude=.github/workflows/sync.yml || true
          echo "✅ Unnecessary files removed"

      - name: Commit Changes
        if: steps.check_updates.outputs.has_updates == 'true' || github.event.inputs.force_sync == 'true'
        run: |
          git add .
          git commit -m "Remove unnecessary workflow files (excluding sync.yml) and sync with upstream" || echo "No changes to commit"
          echo "✅ Changes committed"

      - name: Push Changes
        if: steps.check_updates.outputs.has_updates == 'true' || github.event.inputs.force_sync == 'true'
        run: |
          echo "📤 Pushing synced changes..."
          git push origin main --force
          echo "✅ Successfully synced with upstream repository"

      - name: Create Summary
        if: always()
        run: |
          echo "## 🔄 Upstream Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_updates.outputs.has_updates }}" == "true" ]; then
            echo "✅ **Status**: Repository successfully synced with upstream" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Upstream Commit**: \`${{ steps.check_updates.outputs.upstream_commit }}\`" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event.inputs.force_sync }}" == "true" ]; then
            echo "🔄 **Status**: Force sync completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Status**: No updates available from upstream" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⏰ **Last Check**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Upstream**: https://github.com/LibreSpark/LibreTV" >> $GITHUB_STEP_SUMMARY

      - name: Notify on Failure
        if: failure()
        run: |
          echo "## ❌ Sync Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The upstream sync process encountered an error. Please check the logs above for more details." >> $GITHUB_STEP_SUMMARY
          echo "You may need to manually resolve conflicts or check the upstream repository status." >> $GITHUB_STEP_SUMMARY
